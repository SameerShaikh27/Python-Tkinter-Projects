from tkinter import *


# Functions to display Credit Obtained, Total Credit and and CGPA
def display():

    # Variable to store total marks
    total = 0

    # Marks are allotted on the multiple of 5 (e_g1)
    if eg1_value.get() == "A+":
        l_m1.config(text="50")
        total += 50

    if eg1_value.get() == "A":
        l_m1.config(text="45")
        total += 45

    if eg1_value.get() == "B":
        l_m1.config(text="40")
        total += 40

    if eg1_value.get() == "C":
        l_m1.config(text="35")
        total += 35

    if eg1_value.get() == "D":
        l_m1.config(text="30")
        total += 30

    if eg1_value.get() == "E":
        l_m1.config(text="25")
        total += 25

    if eg1_value.get() == "F":
        l_m1.config(text="0")
        total += 0

    # Marks are allotted on the multiple of 4 (e_g2)
    if eg2_value.get() == "A+":
        l_m2.config(text="40")
        total += 40

    if eg2_value.get() == "A":
        l_m2.config(text="36")
        total += 36

    if eg2_value.get() == "B":
        l_m2.config(text="32")
        total += 32

    if eg2_value.get() == "C":
        l_m2.config(text="28")
        total += 28

    if eg2_value.get() == "D":
        l_m2.config(text="24")
        total += 24

    if eg2_value.get() == "E":
        l_m2.config(text="20")
        total += 20

    if eg2_value.get() == "F":
        l_m2.config(text="0")
        total += 0

    # Marks are allotted on the multiple of 5 (e_g3)
    if eg3_value.get() == "A+":
        l_m3.config(text="50")
        total += 50

    if eg3_value.get() == "A":
        l_m3.config(text="45")
        total += 45

    if eg3_value.get() == "B":
        l_m3.config(text="40")
        total += 40

    if eg3_value.get() == "C":
        l_m3.config(text="35")
        total += 35

    if eg3_value.get() == "D":
        l_m3.config(text="30")
        total += 30

    if eg3_value.get() == "E":
        l_m3.config(text="25")
        total += 25

    if eg3_value.get() == "F":
        l_m3.config(text="0")
        total += 0

    # Marks are allotted on the multiple of 5 (e_g4)
    if eg4_value.get() == "A+":
        l_m4.config(text="50")
        total += 50

    if eg4_value.get() == "A":
        l_m4.config(text="45")
        total += 45

    if eg4_value.get() == "B":
        l_m4.config(text="40")
        total += 40

    if eg4_value.get() == "C":
        l_m4.config(text="35")
        total += 35

    if eg4_value.get() == "D":
        l_m4.config(text="30")
        total += 30

    if eg4_value.get() == "E":
        l_m4.config(text="25")
        total += 25

    if eg4_value.get() == "F":
        l_m4.config(text="0")
        total += 0

    # Marks are allotted on the multiple of 4 (e_g5)
    if eg5_value.get() == "A+":
        l_m5.config(text="40")
        total += 40

    if eg5_value.get() == "A":
        l_m5.config(text="36")
        total += 36

    if eg5_value.get() == "B":
        l_m5.config(text="32")
        total += 32

    if eg5_value.get() == "C":
        l_m5.config(text="28")
        total += 28

    if eg5_value.get() == "D":
        l_m5.config(text="24")
        total += 24

    if eg5_value.get() == "E":
        l_m5.config(text="20")
        total += 20

    if eg5_value.get() == "F":
        l_m5.config(text="0")
        total += 0

    # Marks are allotted on the multiple of 4 (e_g6)
    if eg6_value.get() == "A+":
        l_m6.config(text="40")
        total += 40

    if eg6_value.get() == "A":
        l_m6.config(text="36")
        total += 36

    if eg6_value.get() == "B":
        l_m6.config(text="32")
        total += 32

    if eg6_value.get() == "C":
        l_m6.config(text="28")
        total += 28

    if eg6_value.get() == "D":
        l_m6.config(text="24")
        total += 24

    if eg6_value.get() == "E":
        l_m6.config(text="20")
        total += 20

    if eg6_value.get() == "F":
        l_m6.config(text="")
        total += 0

    # Marks are allotted on the multiple of 4 (e_g7)
    if eg7_value.get() == "A+":
        l_m7.config(text="40")
        total += 40

    if eg7_value.get() == "A":
        l_m7.config(text="36")
        total += 36

    if eg7_value.get() == "B":
        l_m7.config(text="32")
        total += 32

    if eg7_value.get() == "C":
        l_m7.config(text="28")
        total += 28

    if eg7_value.get() == "D":
        l_m7.config(text="24")
        total += 24

    if eg7_value.get() == "E":
        l_m7.config(text="20")
        total += 20

    if eg7_value.get() == "F":
        l_m7.config(text="0")
        total += 0

    # Marks are allotted on the multiple of 5 (e_g8)
    if eg8_value.get() == "A+":
        l_m8.config(text="50")
        total += 50

    if eg8_value.get() == "A":
        l_m8.config(text="45")
        total += 45

    if eg8_value.get() == "B":
        l_m8.config(text="40")
        total += 40

    if eg8_value.get() == "C":
        l_m8.config(text="35")
        total += 35

    if eg8_value.get() == "D":
        l_m8.config(text="30")
        total += 30

    if eg8_value.get() == "E":
        l_m8.config(text="25")
        total += 25

    if eg8_value.get() == "F":
        l_m8.config(text="Fail")
        total += 0

    # to display total credits
    l_empty_total_credit.config(text=str(total))

    # to display CGPA and (total is 360 so we have to divide it by 36)
    l_empty_cgpa.config(text=str(total / 36))


def clear():
    e_name.delete(0, END)
    e_roll_no.delete(0, END)
    e_reg_no.delete(0, END)
    e_g1.delete(0, END)
    e_g2.delete(0, END)
    e_g3.delete(0, END)
    e_g4.delete(0, END)
    e_g5.delete(0, END)
    e_g6.delete(0, END)
    e_g7.delete(0, END)
    e_g8.delete(0, END)
    l_m1.config(text="")
    l_m2.config(text="")
    l_m3.config(text="")
    l_m4.config(text="")
    l_m5.config(text="")
    l_m6.config(text="")
    l_m7.config(text="")
    l_m8.config(text="")
    l_empty_total_credit.config(text="")
    l_empty_cgpa.config(text="")


if __name__ == "__main__":

    root = Tk()

    root.geometry("820x620")
    root.title("CGPA MarkSheet")

    # declaring objects for entering data
    e1_value = StringVar()
    e2_value = StringVar()
    e3_value = StringVar()
    eg1_value = StringVar()
    eg2_value = StringVar()
    eg3_value = StringVar()
    eg4_value = StringVar()
    eg5_value = StringVar()
    eg6_value = StringVar()
    eg7_value = StringVar()
    eg8_value = StringVar()

    l_title = Label(root, text="C.R College Result", font=("Cooper", "25", "bold", "underline"))
    l_title.pack(pady=10)

    main_frame = Frame(root, bg="silver", relief=RIDGE, bd=10, padx=20, pady=20)
    main_frame.pack(pady=10)

    #  **^^**  STUDENTS INFO  **^^** #
    l_name = Label(main_frame, text="Name", font="Cooper 10 bold", bg="silver")
    l_name.grid(row=1, column=0, padx=20)

    l_roll_no = Label(main_frame, text="Roll.No", font="Cooper 10 bold", bg="silver")
    l_roll_no.grid(row=2, column=0, pady=15, padx=20)

    l_reg_no = Label(main_frame, text="Reg.No", font="Cooper 10 bold", bg="silver")
    l_reg_no.grid(row=1, column=3)

    e_name = Entry(main_frame, textvariable=e1_value, bd=5)
    e_name.grid(row=1, column=1)

    e_roll_no = Entry(main_frame, textvariable=e2_value, bd=5)
    e_roll_no.grid(row=2, column=1)

    e_reg_no = Entry(main_frame, textvariable=e3_value, bd=5)
    e_reg_no.grid(row=1, column=4)

    # Serial_No, Subjects Name, Subjects Entries, Sub Credit and Credit Obtained Mentioned below
    #  **^^**  LABELS FOR HEADINGS  **^^** #
    l_srl_no = Label(main_frame, text="Srl.No", font="Cooper 15 bold", pady=10, bg="silver")
    l_srl_no.grid(row=4, column=0)

    l_subject = Label(main_frame, text="Subject", font="Cooper 15 bold", pady=10, bg="silver")
    l_subject.grid(row=4, column=1)

    l_grade = Label(main_frame, text="Grade", font="Cooper 15 bold", pady=10, bg="silver")
    l_grade.grid(row=4, column=2)

    l_sub_credit = Label(main_frame, text="Sub Credit", font="Cooper 15 bold", pady=10, bg="silver")
    l_sub_credit.grid(row=4, column=3)

    l_credit_obtained = Label(main_frame, text="Credit Obtained", font="Cooper 15 bold", pady=10, bg="silver")
    l_credit_obtained.grid(row=4, column=4)

    #  **^^**  LABELS FOR WHOLE LOWER BODY  **^^** #
    #  **  Labels For Serial No **  #
    l1 = Label(main_frame, text="1", font="Cooper 10 bold", bg="silver")
    l1.grid(row=5, column=0)

    l2 = Label(main_frame, text="2", font="Cooper 10 bold", bg="silver")
    l2.grid(row=6, column=0)

    l3 = Label(main_frame, text="3", font="Cooper 10 bold", bg="silver")
    l3.grid(row=7, column=0)

    l4 = Label(main_frame, text="4", font="Cooper 10 bold", bg="silver")
    l4.grid(row=8, column=0)

    l5 = Label(main_frame, text="5", font="Cooper 10 bold", bg="silver")
    l5.grid(row=9, column=0)

    l6 = Label(main_frame, text="6", font="Cooper 10 bold", bg="silver")
    l6.grid(row=10, column=0)

    l7 = Label(main_frame, text="7", font="Cooper 10 bold", bg="silver")
    l7.grid(row=11, column=0)

    l8 = Label(main_frame, text="8", font="Cooper 10 bold", bg="silver")
    l8.grid(row=12, column=0)

    #  **  Labels For Subjects  **  #
    # Maths
    l_m = Label(main_frame, text="Maths", font="Cooper 10 bold", bg="silver")
    l_m.grid(row=5, column=1)

    # Physics
    l_p = Label(main_frame, text="Physics", font="Cooper 10 bold", bg="silver")
    l_p.grid(row=6, column=1)

    # Algorithms
    l_algo = Label(main_frame, text="Algo", font="Cooper 10 bold", bg="silver")
    l_algo.grid(row=7, column=1)

    # Data Structure
    l_ds = Label(main_frame, text="DS", font="Cooper 10 bold", bg="silver")
    l_ds.grid(row=8, column=1)

    # Object Oriented programming
    l_oop = Label(main_frame, text="OOP", font="Cooper 10 bold", bg="silver")
    l_oop.grid(row=9, column=1)

    # Data Communication
    l_dc = Label(main_frame, text="DC", font="Cooper 10 bold", bg="silver")
    l_dc.grid(row=10, column=1)

    # Operating System
    l_os = Label(main_frame, text="OS", font="Cooper 10 bold", bg="silver")
    l_os.grid(row=11, column=1)

    # Internet Of Things
    l_iot = Label(main_frame, text="IOT", font="Cooper 10 bold", bg="silver")
    l_iot.grid(row=12, column=1)

    #  **  Entry Boxes For Grades  **  #
    e_g1 = Entry(main_frame, textvariable=eg1_value, bd=3, width=14)
    e_g1.grid(row=5, column=2)

    e_g2 = Entry(main_frame, textvariable=eg2_value, bd=3, width=14)
    e_g2.grid(row=6, column=2)

    e_g3 = Entry(main_frame, textvariable=eg3_value, bd=3, width=14)
    e_g3.grid(row=7, column=2)

    e_g4 = Entry(main_frame, textvariable=eg4_value, bd=3, width=14)
    e_g4.grid(row=8, column=2)

    e_g5 = Entry(main_frame, textvariable=eg5_value, bd=3, width=14)
    e_g5.grid(row=9, column=2)

    e_g6 = Entry(main_frame, textvariable=eg6_value, bd=3, width=14)
    e_g6.grid(row=10, column=2)

    e_g7 = Entry(main_frame, textvariable=eg7_value, bd=3, width=14)
    e_g7.grid(row=11, column=2)

    e_g8 = Entry(main_frame, textvariable=eg8_value, bd=3, width=14)
    e_g8.grid(row=12, column=2)

    #  **  Labels For Subjects Credits  **  #
    l_1 = Label(main_frame, text="5",  font="Cooper 10 bold", bg="silver")
    l_1.grid(row=5, column=3)

    l_2 = Label(main_frame, text="4",  font="Cooper 10 bold", bg="silver")
    l_2.grid(row=6, column=3)

    l_3 = Label(main_frame, text="5",  font="Cooper 10 bold", bg="silver")
    l_3.grid(row=7, column=3)

    l_4 = Label(main_frame, text="5",  font="Cooper 10 bold", bg="silver")
    l_4.grid(row=8, column=3)

    l_5 = Label(main_frame, text="4",  font="Cooper 10 bold", bg="silver")
    l_5.grid(row=9, column=3)

    l_6 = Label(main_frame, text="4",  font="Cooper 10 bold", bg="silver")
    l_6.grid(row=10, column=3)

    l_7 = Label(main_frame, text="4",  font="Cooper 10 bold", bg="silver")
    l_7.grid(row=11, column=3)

    l_8 = Label(main_frame, text="5",  font="Cooper 10 bold", bg="silver")
    l_8.grid(row=12, column=3)

    #  **  Labels For Subjects Marks  **  #
    l_m1 = Label(main_frame, text="",  font="Cooper 10 bold", bg="silver")
    l_m1.grid(row=5, column=4)

    l_m2 = Label(main_frame, text="",  font="Cooper 10 bold", bg="silver")
    l_m2.grid(row=6, column=4)

    l_m3 = Label(main_frame, text="",  font="Cooper 10 bold", bg="silver")
    l_m3.grid(row=7, column=4)

    l_m4 = Label(main_frame, text="",  font="Cooper 10 bold", bg="silver")
    l_m4.grid(row=8, column=4)

    l_m5 = Label(main_frame, text="",  font="Cooper 10 bold", bg="silver")
    l_m5.grid(row=9, column=4)

    l_m6 = Label(main_frame, text="",  font="Cooper 10 bold", bg="silver")
    l_m6.grid(row=10, column=4)

    l_m7 = Label(main_frame, text="",  font="Cooper 10 bold", bg="silver")
    l_m7.grid(row=11, column=4)

    l_m8 = Label(main_frame, text="",  font="Cooper 10 bold", bg="silver")
    l_m8.grid(row=12, column=4)

    #  **  Label For Total Credit And CGPA  **  #
    l_total_credit = Label(main_frame, text="Total Credit", font="Cooper 15 bold", bg="silver")
    l_total_credit.grid(row=13, column=3)

    l_cgpa = Label(main_frame, text="CGPA", font="Cooper 15 bold", bg="silver")
    l_cgpa.grid(row=14, column=3)

    l_empty_total_credit = Label(main_frame, text="",  font="Cooper 10 bold", bg="silver")
    l_empty_total_credit.grid(row=13, column=4)

    l_empty_cgpa = Label(main_frame, text="",  font="Cooper 10 bold", bg="silver")
    l_empty_cgpa.grid(row=14, column=4)

    #  **  Buttons For Submit And Clear  **  #
    b_submit = Button(main_frame, text="Submit", font="Cooper 10 bold", command=display, bg="grey", bd=5)
    b_submit.grid(row=13, column=2, pady=15)

    b_clear = Button(main_frame, text="Clear All", font="Cooper 10 bold", command=clear, bg="grey", bd=5)
    b_clear.grid(row=14, column=2, pady=15)

    root.mainloop()
    