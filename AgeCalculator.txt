from tkinter import *
from tkinter import messagebox


# Function for clearing the contents of all text entry boxes
def clear_all():
    e1.delete(0, END)
    e2.delete(0, END)
    e3.delete(0, END)
    e4.delete(0, END)
    e5.delete(0, END)
    e6.delete(0, END)
    e7.delete(0, END)
    e8.delete(0, END)
    e9.delete(0, END)


# function for checking error
def check_error():
    # if any of the entry field is empty then show an error message and clear all the entries
    if (e1.get() == "" and e2.get() == "" and e3.get() == "" and e4.get() == "" and e5.get() == "" and e6.get() == ""
            and e7.get() == "" and e8.get() == "" and e9.get() == ""):
        # Show the error message
        messagebox.showerror("Error Found", "Input Error")

        # clear_all function calling to clear every entry box
        clear_all()

        return -1


# function to calculate age
def calculate_age():
    # check for error
    value = check_error()

    # if error is occur then return
    if value == -1:
        return

    else:

        # take a value from the respective entry boxes and .get() method returns current text as string
        birth_day = int(e1.get())
        birth_month = int(e2.get())
        birth_year = int(e3.get())

        current_day = int(e4.get())
        current_month = int(e5.get())
        current_year = int(e6.get())

        # If birth day is greater then current day then do not count this month and add 30 to the date so as to subtract
        # the date and get the remaining days
        month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]

        if birth_day > current_day:
            current_month = current_month - 1
            current_day = current_day + month[birth_month - 1]

        # If birth month exceeds current month, then do not count this year and add 12 to the month so that we can
        # subtract and find out the difference

        if birth_month > current_month:
            current_year = current_year - 1
            current_month = current_month + 12

        # calculate day, month, year
        calculated_year = current_year - birth_year
        calculated_month = current_month - birth_month
        calculated_day = current_day - birth_day

        # calculated day, month, year write back to the respective entry boxes
        # insert method inserting the value in the text entry box.

        e7.insert(10, str(calculated_year))  # result_day
        e8.insert(10, str(calculated_month))  # result_month
        e9.insert(10, str(calculated_day))  # result_year


if __name__ == "__main__":

    root = Tk()

    root.title("Age Calculator")
    root.geometry("1000x800")

    l_title = Label(root, text="AGE CALCULATOR", font=("Cooper", "25", "bold", "underline"), fg="brown", pady=20)
    l_title.grid(row=0, column=4)

    # Date of Birth is on the left side
    l_dob = Label(root, text="Date Of Birth", font=("Cooper", "15", "bold", "underline"), fg="blue")
    l_dob.grid(row=1, column=1)

    l1 = Label(root, text="Day", font="Cooper 10 bold", pady=10, padx=20)
    l1.grid(row=2, column=0)

    l2 = Label(root, text="Month", font="Cooper 10 bold", padx=20)
    l2.grid(row=3, column=0)

    l3 = Label(root, text="Year", font="Cooper 10 bold", pady=10, padx=20)
    l3.grid(row=4, column=0)

    day_value = StringVar()
    month_value = StringVar()
    year_value = StringVar()

    e1 = Entry(root, textvariable=day_value, bd=5)
    e1.grid(row=2, column=1, pady=10, padx=20)

    e2 = Entry(root, textvariable=month_value, bd=5)
    e2.grid(row=3, column=1, padx=20)

    e3 = Entry(root, textvariable=year_value, bd=5)
    e3.grid(row=4, column=1, pady=10, padx=20)

    # Current Date will be on right side
    l_cd = Label(root, text="Current Date", font=("Cooper", "15", "bold", "underline"), fg="blue")
    l_cd.grid(row=1, column=7)

    l4 = Label(root, text="Current Day", font="Cooper 10 bold", pady=10, padx=20)
    l4.grid(row=2, column=6)

    l5 = Label(root, text="Current Month", font="Cooper 10 bold", padx=20)
    l5.grid(row=3, column=6)

    l6 = Label(root, text="Current Year", font="Cooper 10 bold", pady=10, padx=20)
    l6.grid(row=4, column=6)

    current_day_value = StringVar()
    current_month_value = StringVar()
    current_year_value = StringVar()

    e4 = Entry(root, textvariable=current_day_value, bd=5)
    e4.grid(row=2, column=7, pady=10, padx=20)

    e5 = Entry(root, textvariable=current_month_value, bd=5)
    e5.grid(row=3, column=7, padx=20)

    e6 = Entry(root, textvariable=current_year_value, bd=5)
    e6.grid(row=4, column=7, pady=10, padx=20)

    # Result Age is at the centre-bottom
    b_ra = Button(root, text="Result Age", font=("Cooper", "15", "bold", "underline"), fg="blue", bd=5, bg="grey",
                  command=calculate_age)
    b_ra.grid(row=6, column=4, pady=10)

    l7 = Label(root, text="Years", font="Cooper 10 bold", pady=10)
    l7.grid(row=7, column=3)

    l8 = Label(root, text="Months", font="Cooper 10 bold")
    l8.grid(row=8, column=3)

    l9 = Label(root, text="Days", font="Cooper 10 bold", pady=10)
    l9.grid(row=9, column=3)

    result_years_value = StringVar()
    result_months_value = StringVar()
    result_days_value = StringVar()

    e7 = Entry(root, textvariable=result_years_value, bd=5)
    e7.grid(row=7, column=4, pady=10)

    e8 = Entry(root, textvariable=result_months_value, bd=5)
    e8.grid(row=8, column=4)

    e9 = Entry(root, textvariable=result_days_value, bd=5)
    e9.grid(row=9, column=4, pady=10)

    b_clear = Button(root, text="Clear All", font="Cooper 15 bold", bd=5, bg="grey", command=clear_all)
    b_clear.grid(row=10, column=4, pady=10)

    root.mainloop()
